FASTSUBS		            Copyright (c) 2012, Deniz Yuret

Usage: fastsubs [-n <n> | -p <p>] model.lm[.gz] < input.txt

Fastsubs is a program that finds the most likely substitutes for words
in input.txt using the language model in model.lm (ARPA format).  The
number of substitutes is controlled by two parameters: -n specifies
the number of substitutes for each word, -p specifies a threshold on
the sum of the substitute probabilities.  The program stops generating
substitutes for a word when either limit is satisfied.  The output has
an input word and its substitutes with the logarithm (base 10) of
their unnormalized probabilities in the following format:

word <tab> sub1 <space> lprob1 <tab> sub2 <space> lprob2 <tab> ...

Please see the file LICENSE for terms of use.  A description of the
algorithm can be found in http://arxiv.org/abs/1205.5407v1.  To
compile you need the glib2 library.  Otherwise everything is standard
C, so just typing make should give you an executable.

Other test and utility executables that can be built using the
Makefile:

* subs: Slow subs algorithm that computes the probability for each
  word in the vocabulary as a candidate substitute.  The top K words
  and their probabilities should match the fastsubs output.

* wordsub: Takes the output of fastsubs and samples random substitutes
  for each word.

* fastsubs-test: Takes a model file and interactively runs fastsubs on
  sentences typed by the user.

* lmheap-test: Takes a model file and tests the lmheap data structure
  by interactively reading n-grams from the user and printing out the
  contents of the heap for each position.

* sentence-test: Takes a model file and tests the sentence and lm data
  structures by reading sentences from the user and printing out logp
  for each word.

* lm-test: Takes a model file and tests the lm data structure by
  reading n-grams from the user and printing out their logp and
  back-off weights.

* normalize-subs.pl: Takes fastsubs output and converts the
  unnormalized log10(p) entries to normalized p entries that add up to
  1.0 (which may not be accurate if fastsubs did not output the whole
  vocabulary.)
